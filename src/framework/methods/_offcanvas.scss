// ===================================================
// OffCanvas
// ===================================================

/// Generate a simple OffCanvas Skeleton. You need a Trigger Element,
/// the Javascript you will find in the JS Folder (src/js).
///
/// @param {number} $width                         - OffCanvas Width [300px]
/// @param {map}    $o                             - Setup Args
/// @param {string} $o.name  ['.canvas']           - Name (can be a class or placeholder)
/// @param {string} $o.state-name ['is-offcanvas'] - Name from the active State class.
/// @param {*}      $o.break [4]                   - Breakpoint
/// @param {string} $o.position [right]            - OffCanvas Position (right / left)
/// @param {bool}   $o.offOverOn [true]            - Shift the OffCanvas over OnCanvas
/// @param {number} $o.time [400ms]                - Timing for the transition
/// @param {bool}   $o.responsive [true]           - Viewportsizes over the Breakpoint, reset OffCanvas
///
/// @example html - Structure
///    <div class="ROOT">
///      <div class="ROOT__on">...</div>
///      <div class="ROOT__off">
///        <div class="ROOT__off__scroll">...</div>
///      </div>
///    </div>
///
/// @example scss - scss
///    .offcanvas {
///      @include offcanvas();
///    }
///
/// @example css - css
///   body.is-offcanvas .offcanvas {
///     overflow: hidden; }
///   @media screen and (min-width: 768px) {
///     body.is-offcanvas .offcanvas {
///       overflow: inherit; }
///   }
///   .offcanvas .canvas {
///     position: relative; }
///   .is-offcanvas .offcanvas .canvas__on {
///     position: relative;
///     z-index: 10;
///     transform: translateX(-300px); }
///   .is-offcanvas .offcanvas .canvas__on else {
///     z-index: 1; }
///   @media screen and (min-width: 768px) {
///     .is-offcanvas .offcanvas .canvas__on {
///       transform: translateX(0); } }
///   .offcanvas .canvas__off {
///     height: 100vh;
///     width: 300px;
///     position: fixed;
///     top: 0;
///     z-index: 1;
///     right: 0;
///     transform: translateX(300px); }
///   .offcanvas .canvas__off else {
///     z-index: 10; }
///   .is-offcanvas .offcanvas .canvas__off {
///     transform: translateX(0); }
///   @media screen and (min-width: 768px) {
///     .is-offcanvas .offcanvas .canvas__off {
///       transform: translateX(300px); } }
///   .offcanvas .canvas__off__scroll {
///     height: 100%;
///     overflow: scroll; }
@mixin offcanvas($width: 300px, $o: ()) {

  // Mixin Default Vars
  $o: map-merge((
    name: '.canvas',
    state-name: 'is-offcanvas',
    break: 4,
    position: 'right',
    offOverOn: true,
    time: 400ms,
    responsive: true
  ),$o);

  // Style Container
  @at-root %canvas-base-style {
    min-height: 100vh;
    transition: transform map-get($o, time) cubic-bezier(0.42, 0, 0.32, 0.99);
  }

  // Modify the Body when Offcanvas is active
  // Prevents to scroll the Page.
  body.#{map-get($o, state-name)} {
    overflow: hidden;

    // Reset OffCanvas on Bigger Screensizes
    @if map-get($o, responsive) {
      @include break(map-get($o, break)) {
        overflow: inherit;
      }
    }
  }

  // Base Class
  #{map-get($o, name)} {
    position: relative;

    // On Canvas
    &__on {
      @extend %canvas-base-style;

      // Active State
      .#{map-get($o, state-name)} & {
        position: relative;
        // Move OffCanvas in the Stack Levels
        @if map-get($o, offOverOn) { z-index: 10;} @else { z-index: 1;}

        // Build the Distance based on the Directions
        @if map-get($o, position) == 'right' {
          transform: translateX(-($width));
        } @else {
          transform: translateX($width);
        }

        // Reset OffCanvas on Bigger Screensizes
        @if map-get($o, responsive) {
          // Reset the OffCanvas Position on Bigger Screensizes
          @include break(map-get($o, break)) {
            transform: translateX(0);
          }
        }
      }
    }

    // Off Canvas Elements
    &__off {
      @extend %canvas-base-style;
      height: 100vh;
      width: $width;
      position: fixed;
      top: 0;

      // Move OffCanvas in the Stack Levels
      @if map-get($o, offOverOn) { z-index: 1;} @else { z-index: 10;}

      // Offcanvas Position is variable
      @if map-get($o, position) == 'right' {
        right: 0;
        transform: translateX($width);
      } @else {
        left: 0;
        transform: translateX(-($width));
      }


      // Active State
      .#{map-get($o, state-name)} & {
        transform: translateX(0);

        // Reset OffCanvas on Bigger Screensizes
        @if map-get($o, responsive) {
          // Move Offcanvas off Screen on bigger screensizes
          @include break(map-get($o, break)) {
            @if map-get($o, position) == 'right' {
              transform: translateX($width);
            } @else {
              transform: translateX(-($width));
            }
          }
        }
      }

      // Inner Scrollcontainer
      &__scroll {
        height: 100%;
        overflow: scroll;
      }
    }
  }
}
